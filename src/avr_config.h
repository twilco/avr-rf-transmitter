#ifndef AVR_CONFIG_H_
#define AVR_CONFIG_H_

#include "types/general_types.h"

#include <stdint.h>

#define F_CPU (uint32_t) 4000000

#define TIMER2_PRESCALER (uint16_t) 256

/* Example calculation: ((EIGHT_BIT_TIMER_MAX [255] * TIMER2_PRESCALER [256] ) / (float) F_CPU [4,000,000])) == .01632
   Multiply by the number of milliseconds in a second (1000) to get an overflow time of 16.32ms */
#define EIGHT_BIT_TIMER_MAX 255
#define TIMER2_TIME_TO_OVERFLOW (float) ((EIGHT_BIT_TIMER_MAX * TIMER2_PRESCALER) / (float) F_CPU)

#define MS_IN_SEC 1000
#define TIMER2_MS_TO_OVERFLOW (float) (TIMER2_TIME_TO_OVERFLOW * MS_IN_SEC)

#define ANALOG_STICK_X ADC0_PIN
#define ANALOG_STICK_Y ADC1_PIN

#define ANALOG_STICK_BTN_PIN_REG PIND
#define ANALOG_STICK_BTN_PIN PIND4

#define PURPLE1_BTN_PIN_REG PINC
#define PURPLE1_BTN_PIN PINC5

#define PURPLE2_BTN_PIN_REG PINC
#define PURPLE2_BTN_PIN PINC4

#define PURPLE3_BTN_PIN_REG PINC
#define PURPLE3_BTN_PIN PINC3

#define BROWN1_BTN_PIN_REG PINC
#define BROWN1_BTN_PIN PINC2

#define BROWN2_BTN_PIN_REG PIND
#define BROWN2_BTN_PIN PIND6

#define BROWN3_BTN_PIN_REG PIND
#define BROWN3_BTN_PIN PIND5

#define BLUE1_BTN_PIN_REG PINB
#define BLUE1_BTN_PIN PINB2

#define BLUE2_BTN_PIN_REG PINB
#define BLUE2_BTN_PIN PINB1

#define LEFT_SHOULDER_BTN_PIN_REG PIND
#define LEFT_SHOULDER_BTN_PIN PIND7

#define RIGHT_SHOULDER_BTN_PIN_REG PINB
#define RIGHT_SHOULDER_BTN_PIN PINB0

#endif /* AVR_CONFIG_H_ */